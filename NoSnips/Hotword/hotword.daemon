#!/bin/bash -vx
#
# Hotword service for NoSnips replacement service.
# Usage:
#     hotword.daemon path/to/nosnips.toml
#     hotword.daemon /etc/nosnips.toml
#
# https://github.com/dbohdan/remarshal is used for reading toml
# jq is used for parsing JSON
#

# set config path:
#
if [[ $# -lt 1 ]] ; then
  CONFIG="/etc/nosnips.toml"
else
  CONFIG=$1
fi

# load tool funs:
#
source $/BASE_DIR/Tools/funs.sh

# parse config from toml:
# PUBLISH, SUBSCRIBE, MQTT_PORT, MQTT_HOST,
# BASE_DIR, WORK_DIR, SITE_ID
#
readToml $CONFIG

TOML="$(cat $CONFIG | toml2json)"
DETECTOR="${BASE_DIR}/$(echo $J | jq '.hotword.binary')"
MODEL="$(echo $J | jq -r '.hotword.model_path')/$(echo $J | jq '.hotword.model')"
SENSITIVITY="$(echo $J | jq -r '.hotword.sensitivity')"


# construct MQTT message for hotword detected
#
TOPIC="hermes/hotword/default/detected"
PAYLOAD="{
  \"siteId\": \"$SITE_ID\",
  \"modelId\": \"default\",
  \"modelVersion\": \"1.0\",
  \"modeltype\": \"personal\",
  \"currentSensitivity\": $SENSITIVITY
}"

while true ; do

  # wait until strat frigger via mqtt:
  #     mosquitto_pub -h <HOSTNAME> -t 'hermes/hotword/toggleOn' \
  #         -m '{"siteId": "default"}'
  #
  MQTT_SITE="no_site_at_all"
  while [[ $MQTT_SITE != $SITE_ID ]] ; do
    subscribeOnce hermes/hotword/toggleOn
    MQTT_SITE="$(echo $PAYLOAD | jq -r '.local.siteId')"
  done

    # run Snowboy until hotword is detected
    #
    $DETECTOR $MODEL $SENSITIVITY

    $PUBLISH -h $MQTT_HOST -p $MQTT_PORT -t $TOPIC -m $PAYLOAD
  fi
done
